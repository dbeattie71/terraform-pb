syntax "proto3";

package google;

message GoogleRedisInstance {

  // Only applicable to STANDARD_HA tier which protects the instance
against zonal failures by provisioning it across two zones.
If provided, it must be a different zone from the one provided in
[locationId].
  alternative_location_id = 1;

  // The full name of the Google Compute Engine network to which the
instance is connected. If left unspecified, the default network
will be used.
  authorized_network = 2;

  // The connection mode of the Redis instance. Can be either
'DIRECT_PEERING' or 'PRIVATE_SERVICE_ACCESS'. The default
connect mode if not provided is 'DIRECT_PEERING'.
  connect_mode = 3;

  // The time the instance was created in RFC3339 UTC "Zulu" format,
accurate to nanoseconds.
  create_time = 4;

  // The current zone where the Redis endpoint is placed.
For Basic Tier instances, this will always be the same as the
[locationId] provided by the user at creation time. For Standard Tier
instances, this can be either [locationId] or [alternativeLocationId]
and can change after a failover event.
  current_location_id = 5;

  // An arbitrary and optional user-provided name for the instance.
  display_name = 6;

  // Hostname or IP address of the exposed Redis endpoint used by clients
to connect to the service.
  host = 7;
  id = 8;

  // Resource labels to represent user provided metadata.
  labels = 9;

  // The zone where the instance will be provisioned. If not provided,
the service will choose a zone for the instance. For STANDARD_HA tier,
instances will be created across two zones for protection against
zonal failures. If [alternativeLocationId] is also provided, it must
be different from [locationId].
  location_id = 10;

  // Redis memory size in GiB.
  memory_size_gb = 11;

  // The ID of the instance or a fully qualified identifier for the instance.
  name = 12;

  // The port number of the exposed Redis endpoint.
  port = 13;
  project = 14;

  // Redis configuration parameters, according to http://redis.io/topics/config.
Please check Memorystore documentation for the list of supported parameters:
https://cloud.google.com/memorystore/docs/redis/reference/rest/v1/projects.locations.instances#Instance.FIELDS.redis_configs
  redis_configs = 15;

  // The version of Redis software. If not provided, latest supported
version will be used. Currently, the supported values are:

- REDIS_4_0 for Redis 4.0 compatibility
- REDIS_3_2 for Redis 3.2 compatibility
  redis_version = 16;

  // The name of the Redis region of the instance.
  region = 17;

  // The CIDR range of internal addresses that are reserved for this
instance. If not provided, the service will choose an unused /29
block, for example, 10.0.0.0/29 or 192.168.0.0/29. Ranges must be
unique and non-overlapping with existing subnets in an authorized
network.
  reserved_ip_range = 18;

  // The service tier of the instance. Must be one of these values:

- BASIC: standalone instance
- STANDARD_HA: highly available primary/replica instances
  tier = 19;
  message Timeouts {
    create = 1;
    delete = 2;
    update = 3;
  }
  timeouts = 20;
}