syntax "proto3";

package google;

message GoogleAppEngineFlexibleAppVersion {

  // Metadata settings that are supplied to this version to enable beta runtime features.
  beta_settings = 1;

  // Duration that static files should be cached by web proxies and browsers.
Only applicable if the corresponding StaticFilesHandler does not specify its own expiration time.
  default_expiration = 2;
  delete_service_on_destroy = 3;

  // Environment variables available to the application.  As these are not returned in the API request, Terraform will not detect any changes made outside of the Terraform config.
  env_variables = 4;
  id = 5;

  // Before an application can receive email or XMPP messages, the application must be configured to enable the service.
  inbound_services = 6;

  // Instance class that is used to run this version. Valid values are
AutomaticScaling: F1, F2, F4, F4_1G
ManualScaling: B1, B2, B4, B8, B4_1G
Defaults to F1 for AutomaticScaling and B1 for ManualScaling.
  instance_class = 7;

  // Full path to the Version resource in the API. Example, "v1".
  name = 8;

  // Files that match this pattern will not be built into this version. Only applicable for Go runtimes.
  nobuild_files_regex = 9;
  noop_on_destroy = 10;
  project = 11;

  // Desired runtime. Example python27.
  runtime = 12;

  // The version of the API in the given runtime environment. 
Please see the app.yaml reference for valid values at https://cloud.google.com/appengine/docs/standard//config/appref
  runtime_api_version = 13;

  // The channel of the runtime to use. Only available for some runtimes.
  runtime_channel = 14;

  // The path or name of the app's main executable.
  runtime_main_executable_path = 15;

  // AppEngine service resource
  service = 16;

  // Current serving status of this version. Only the versions with a SERVING status create instances and can be billed.
Defaults to SERVING.
  serving_status = 17;

  // Relative name of the version within the service. For example, 'v1'. Version names can contain only lowercase letters, numbers, or hyphens.
Reserved names,"default", "latest", and any name with the prefix "ah-".
  version_id = 18;
  message ApiConfig {

    // Action to take when users access resources that require authentication. Defaults to "AUTH_FAIL_ACTION_REDIRECT".
    auth_fail_action = 1;

    // Level of login required to access this resource. Defaults to "LOGIN_OPTIONAL".
    login = 2;

    // Path to the script from the application root directory.
    script = 3;

    // Security (HTTPS) enforcement for this URL.
    security_level = 4;

    // URL to serve the endpoint at.
    url = 5;
  }
  api_config = 19;
  message AutomaticScaling {

    // The time period that the Autoscaler should wait before it starts collecting information from a new instance.
This prevents the autoscaler from collecting information when the instance is initializing,
during which the collected usage would not be reliable. Default: 120s
    cool_down_period = 1;

    // Number of concurrent requests an automatic scaling instance can accept before the scheduler spawns a new instance.

Defaults to a runtime-specific value.
    max_concurrent_requests = 2;

    // Maximum number of idle instances that should be maintained for this version.
    max_idle_instances = 3;

    // Maximum amount of time that a request should wait in the pending queue before starting a new instance to handle it.
    max_pending_latency = 4;

    // Maximum number of instances that should be started to handle requests for this version. Default: 20
    max_total_instances = 5;

    // Minimum number of idle instances that should be maintained for this version. Only applicable for the default version of a service.
    min_idle_instances = 6;

    // Minimum amount of time a request should wait in the pending queue before starting a new instance to handle it.
    min_pending_latency = 7;

    // Minimum number of running instances that should be maintained for this version. Default: 2
    min_total_instances = 8;
    message CpuUtilization {

      // Period of time over which CPU utilization is calculated.
      aggregation_window_length = 1;

      // Target CPU utilization ratio to maintain when scaling. Must be between 0 and 1.
      target_utilization = 2;
    }
    cpu_utilization = 9;
    message DiskUtilization {

      // Target bytes read per second.
      target_read_bytes_per_second = 1;

      // Target ops read per seconds.
      target_read_ops_per_second = 2;

      // Target bytes written per second.
      target_write_bytes_per_second = 3;

      // Target ops written per second.
      target_write_ops_per_second = 4;
    }
    disk_utilization = 10;
    message NetworkUtilization {

      // Target bytes received per second.
      target_received_bytes_per_second = 1;

      // Target packets received per second.
      target_received_packets_per_second = 2;

      // Target bytes sent per second.
      target_sent_bytes_per_second = 3;

      // Target packets sent per second.
      target_sent_packets_per_second = 4;
    }
    network_utilization = 11;
    message RequestUtilization {

      // Target number of concurrent requests.
      target_concurrent_requests = 1;

      // Target requests per second.
      target_request_count_per_second = 2;
    }
    request_utilization = 12;
  }
  automatic_scaling = 20;
  message Deployment {
    message CloudBuildOptions {

      // Path to the yaml file used in deployment, used to determine runtime configuration details.
      app_yaml_path = 1;

      // The Cloud Build timeout used as part of any dependent builds performed by version creation. Defaults to 10 minutes.

A duration in seconds with up to nine fractional digits, terminated by 's'. Example: "3.5s".
      cloud_build_timeout = 2;
    }
    cloud_build_options = 1;
    message Container {

      // URI to the hosted container image in Google Container Registry. The URI must be fully qualified and include a tag or digest.
Examples: "gcr.io/my-project/image:tag" or "gcr.io/my-project/image@digest"
      image = 1;
    }
    container = 2;
    message Files {
      name = 1;

      // SHA1 checksum of the file
      sha1_sum = 2;

      // Source URL
      source_url = 3;
    }
    files = 3;
    message Zip {

      // files count
      files_count = 1;

      // Source URL
      source_url = 2;
    }
    zip = 4;
  }
  deployment = 21;
  message EndpointsApiService {

    // Endpoints service configuration ID as specified by the Service Management API. For example "2016-09-19r1".

By default, the rollout strategy for Endpoints is "FIXED". This means that Endpoints starts up with a particular configuration ID.
When a new configuration is rolled out, Endpoints must be given the new configuration ID. The configId field is used to give the configuration ID
and is required in this case.

Endpoints also has a rollout strategy called "MANAGED". When using this, Endpoints fetches the latest configuration and does not need
the configuration ID. In this case, configId must be omitted.
    config_id = 1;

    // Enable or disable trace sampling. By default, this is set to false for enabled.
    disable_trace_sampling = 2;

    // Endpoints service name which is the name of the "service" resource in the Service Management API.
For example "myapi.endpoints.myproject.cloud.goog"
    name = 3;

    // Endpoints rollout strategy. If FIXED, configId must be specified. If MANAGED, configId must be omitted. Default is "FIXED".
    rollout_strategy = 4;
  }
  endpoints_api_service = 22;
  message Entrypoint {

    // The format should be a shell command that can be fed to bash -c.
    shell = 1;
  }
  entrypoint = 23;
  message LivenessCheck {

    // Interval between health checks.
    check_interval = 1;

    // Number of consecutive failed checks required before considering the VM unhealthy. Default: 4.
    failure_threshold = 2;

    // Host header to send when performing a HTTP Readiness check. Example: "myapp.appspot.com"
    host = 3;

    // The initial delay before starting to execute the checks. Default: "300s"
    initial_delay = 4;

    // The request path.
    path = 5;

    // Number of consecutive successful checks required before considering the VM healthy. Default: 2.
    success_threshold = 6;

    // Time before the check is considered failed. Default: "4s"
    timeout = 7;
  }
  liveness_check = 24;
  message ManualScaling {

    // Number of instances to assign to the service at the start. This number can later be altered by using the Modules API set_num_instances() function.
    instances = 1;
  }
  manual_scaling = 25;
  message Network {

    // List of ports, or port pairs, to forward from the virtual machine to the application container.
    forwarded_ports = 1;

    // Tag to apply to the instance during creation.
    instance_tag = 2;

    // Google Compute Engine network where the virtual machines are created. Specify the short name, not the resource path.
    name = 3;

    // Enable session affinity.
    session_affinity = 4;

    // Google Cloud Platform sub-network where the virtual machines are created. Specify the short name, not the resource path.

If the network that the instance is being created in is a Legacy network, then the IP address is allocated from the IPv4Range.
If the network that the instance is being created in is an auto Subnet Mode Network, then only network name should be specified (not the subnetworkName) and the IP address is created from the IPCidrRange of the subnetwork that exists in that zone for that network.
If the network that the instance is being created in is a custom Subnet Mode Network, then the subnetworkName must be specified and the IP address is created from the IPCidrRange of the subnetwork.
If specified, the subnetwork must exist in the same region as the App Engine flexible environment application.
    subnetwork = 5;
  }
  network = 26;
  message ReadinessCheck {

    // A maximum time limit on application initialization, measured from moment the application successfully
replies to a healthcheck until it is ready to serve traffic. Default: "300s"
    app_start_timeout = 1;

    // Interval between health checks.  Default: "5s".
    check_interval = 2;

    // Number of consecutive failed checks required before removing traffic. Default: 2.
    failure_threshold = 3;

    // Host header to send when performing a HTTP Readiness check. Example: "myapp.appspot.com"
    host = 4;

    // The request path.
    path = 5;

    // Number of consecutive successful checks required before receiving traffic. Default: 2.
    success_threshold = 6;

    // Time before the check is considered failed. Default: "4s"
    timeout = 7;
  }
  readiness_check = 27;
  message Resources {

    // Number of CPU cores needed.
    cpu = 1;

    // Disk size (GB) needed.
    disk_gb = 2;

    // Memory (GB) needed.
    memory_gb = 3;
    message Volumes {

      // Unique name for the volume.
      name = 1;

      // Volume size in gigabytes.
      size_gb = 2;

      // Underlying volume type, e.g. 'tmpfs'.
      volume_type = 3;
    }
    volumes = 4;
  }
  resources = 28;
  message Timeouts {
    create = 1;
    delete = 2;
    update = 3;
  }
  timeouts = 29;
  message VpcAccessConnector {

    // Full Serverless VPC Access Connector name e.g. /projects/my-project/locations/us-central1/connectors/c1.
    name = 1;
  }
  vpc_access_connector = 30;
}