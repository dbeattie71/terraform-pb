syntax="proto3";

package google;

message GoogleDataprocCluster {
  string id = 1;
  map<string, string> labels = 2;
  string name = 3;
  string project = 4;
  string region = 5;
  message ClusterConfig {
    string bucket = 1;
    string staging_bucket = 2;
    message AutoscalingConfig {
      string policy_uri = 1;
    }
    repeated AutoscalingConfig autoscaling_config = 3;
    message EncryptionConfig {
      string kms_key_name = 1;
    }
    repeated EncryptionConfig encryption_config = 4;
    message GceClusterConfig {
      bool   internal_ip_only = 1;
      map<string, string> metadata = 2;
      string network = 3;
      string service_account = 4;
      repeated string service_account_scopes = 5;
      string subnetwork = 6;
      repeated string tags = 7;
      string zone = 8;
    }
    repeated GceClusterConfig gce_cluster_config = 5;
    message InitializationAction {
      string script = 1;
      int64  timeout_sec = 2;
    }
    repeated InitializationAction initialization_action = 6;
    message MasterConfig {
      string image_uri = 1;
      repeated string instance_names = 2;
      string machine_type = 3;
      string min_cpu_platform = 4;
      int64  num_instances = 5;
      message Accelerators {
        int64  accelerator_count = 1;
        string accelerator_type = 2;
      }
      repeated Accelerators accelerators = 6;
      message DiskConfig {
        int64  boot_disk_size_gb = 1;
        string boot_disk_type = 2;
        int64  num_local_ssds = 3;
      }
      repeated DiskConfig disk_config = 7;
    }
    repeated MasterConfig master_config = 7;
    message PreemptibleWorkerConfig {
      repeated string instance_names = 1;
      int64  num_instances = 2;
      message DiskConfig {
        int64  boot_disk_size_gb = 1;
        string boot_disk_type = 2;
        int64  num_local_ssds = 3;
      }
      repeated DiskConfig disk_config = 3;
    }
    repeated PreemptibleWorkerConfig preemptible_worker_config = 8;
    message SecurityConfig {
      message KerberosConfig {

        // The admin server (IP or hostname) for the remote trusted realm in a cross realm trust relationship.
        string cross_realm_trust_admin_server = 1;

        // The KDC (IP or hostname) for the remote trusted realm in a cross realm trust relationship.
        string cross_realm_trust_kdc = 2;

        // The remote realm the Dataproc on-cluster KDC will trust, should the user enable cross realm trust.
        string cross_realm_trust_realm = 3;

        // The Cloud Storage URI of a KMS encrypted file containing the shared password between the on-cluster
        // Kerberos realm and the remote trusted realm, in a cross realm trust relationship.
        string cross_realm_trust_shared_password_uri = 4;

        // Flag to indicate whether to Kerberize the cluster.
        bool   enable_kerberos = 5;

        // The Cloud Storage URI of a KMS encrypted file containing the master key of the KDC database.
        string kdc_db_key_uri = 6;

        // The Cloud Storage URI of a KMS encrypted file containing the password to the user provided key. For the self-signed certificate, this password is generated by Dataproc.
        string key_password_uri = 7;

        // The Cloud Storage URI of a KMS encrypted file containing
        // the password to the user provided keystore. For the self-signed certificate, this password is generated
        // by Dataproc
        string keystore_password_uri = 8;

        // The Cloud Storage URI of the keystore file used for SSL encryption. If not provided, Dataproc will provide a self-signed certificate.
        string keystore_uri = 9;

        // The uri of the KMS key used to encrypt various sensitive files.
        string kms_key_uri = 10;

        // The name of the on-cluster Kerberos realm. If not specified, the uppercased domain of hostnames will be the realm.
        string realm = 11;

        // The cloud Storage URI of a KMS encrypted file containing the root principal password.
        string root_principal_password_uri = 12;

        // The lifetime of the ticket granting ticket, in hours.
        int64  tgt_lifetime_hours = 13;

        // The Cloud Storage URI of a KMS encrypted file containing the password to the user provided truststore. For the self-signed certificate, this password is generated by Dataproc.
        string truststore_password_uri = 14;

        // The Cloud Storage URI of the truststore file used for SSL encryption. If not provided, Dataproc will provide a self-signed certificate.
        string truststore_uri = 15;
      }
      repeated KerberosConfig kerberos_config = 1;
    }
    repeated SecurityConfig security_config = 9;
    message SoftwareConfig {
      string image_version = 1;
      repeated string optional_components = 2;
      map<string, string> override_properties = 3;
      map<string, string> properties = 4;
    }
    repeated SoftwareConfig software_config = 10;
    message WorkerConfig {
      string image_uri = 1;
      repeated string instance_names = 2;
      string machine_type = 3;
      string min_cpu_platform = 4;
      int64  num_instances = 5;
      message Accelerators {
        int64  accelerator_count = 1;
        string accelerator_type = 2;
      }
      repeated Accelerators accelerators = 6;
      message DiskConfig {
        int64  boot_disk_size_gb = 1;
        string boot_disk_type = 2;
        int64  num_local_ssds = 3;
      }
      repeated DiskConfig disk_config = 7;
    }
    repeated WorkerConfig worker_config = 11;
  }
  repeated ClusterConfig cluster_config = 6;
  message Timeouts {
    string create = 1;
    string delete = 2;
    string update = 3;
  }
  Timeouts timeouts = 7;
}