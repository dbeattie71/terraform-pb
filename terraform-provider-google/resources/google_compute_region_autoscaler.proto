syntax="proto3";

package google;

message GoogleComputeRegionAutoscaler {

  // Creation timestamp in RFC3339 text format.
  string creation_timestamp = 1;

  // An optional description of this resource.
  string description = 2;
  string id = 3;

  // Name of the resource. The name must be 1-63 characters long and match
  // the regular expression '[a-z]([-a-z0-9]*[a-z0-9])?' which means the
  // first character must be a lowercase letter, and all following
  // characters must be a dash, lowercase letter, or digit, except the last
  // character, which cannot be a dash.
  string name = 4;
  string project = 5;

  // URL of the region where the instance group resides.
  string region = 6;
  string self_link = 7;

  // URL of the managed instance group that this autoscaler will scale.
  string target = 8;
  message AutoscalingPolicy {

    // The number of seconds that the autoscaler should wait before it
    // starts collecting information from a new instance. This prevents
    // the autoscaler from collecting information when the instance is
    // initializing, during which the collected usage would not be
    // reliable. The default time autoscaler waits is 60 seconds.
    // 
    // Virtual machine initialization times might vary because of
    // numerous factors. We recommend that you test how long an
    // instance may take to initialize. To do this, create an instance
    // and time the startup process.
    int64  cooldown_period = 1;

    // The maximum number of instances that the autoscaler can scale up
    // to. This is required when creating or updating an autoscaler. The
    // maximum number of replicas should not be lower than minimal number
    // of replicas.
    int64  max_replicas = 2;

    // The minimum number of replicas that the autoscaler can scale down
    // to. This cannot be less than 0. If not provided, autoscaler will
    // choose a default value depending on maximum number of instances
    // allowed.
    int64  min_replicas = 3;
    message CpuUtilization {

      // The target CPU utilization that the autoscaler should maintain.
      // Must be a float value in the range (0, 1]. If not specified, the
      // default is 0.6.
      // 
      // If the CPU level is below the target utilization, the autoscaler
      // scales down the number of instances until it reaches the minimum
      // number of instances you specified or until the average CPU of
      // your instances reaches the target utilization.
      // 
      // If the average CPU is above the target utilization, the autoscaler
      // scales up until it reaches the maximum number of instances you
      // specified or until the average utilization reaches the target
      // utilization.
      int64  target = 1;
    }
    repeated CpuUtilization cpu_utilization = 4;
    message LoadBalancingUtilization {

      // Fraction of backend capacity utilization (set in HTTP(s) load
      // balancing configuration) that autoscaler should maintain. Must
      // be a positive float value. If not defined, the default is 0.8.
      int64  target = 1;
    }
    repeated LoadBalancingUtilization load_balancing_utilization = 5;
    message Metric {

      // The identifier (type) of the Stackdriver Monitoring metric.
      // The metric cannot have negative values.
      // 
      // The metric must have a value type of INT64 or DOUBLE.
      string name = 1;

      // The target value of the metric that autoscaler should
      // maintain. This must be a positive value. A utilization
      // metric scales number of virtual machines handling requests
      // to increase or decrease proportionally to the metric.
      // 
      // For example, a good metric to use as a utilizationTarget is
      // www.googleapis.com/compute/instance/network/received_bytes_count.
      // The autoscaler will work to keep this value constant for each
      // of the instances.
      int64  target = 2;

      // Defines how target utilization value is expressed for a
      // Stackdriver Monitoring metric. Either GAUGE, DELTA_PER_SECOND,
      // or DELTA_PER_MINUTE.
      string type = 3;
    }
    repeated Metric metric = 6;
  }
  repeated AutoscalingPolicy autoscaling_policy = 9;
  message Timeouts {
    string create = 1;
    string delete = 2;
    string update = 3;
  }
  Timeouts timeouts = 10;
}