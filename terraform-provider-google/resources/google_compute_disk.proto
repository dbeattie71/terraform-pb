syntax="proto3";

package google;

message GoogleComputeDisk {

  // Creation timestamp in RFC3339 text format.
  string creation_timestamp = 1;

  // An optional description of this resource. Provide this property when
  // you create the resource.
  string description = 2;
  string id = 3;

  // The image from which to initialize this disk. This can be
  // one of: the image's 'self_link', 'projects/{project}/global/images/{image}',
  // 'projects/{project}/global/images/family/{family}', 'global/images/{image}',
  // 'global/images/family/{family}', 'family/{family}', '{project}/{family}',
  // '{project}/{image}', '{family}', or '{image}'. If referred by family, the
  // images names must include the family name. If they don't, use the
  // [google_compute_image data source](/docs/providers/google/d/datasource_compute_image.html).
  // For instance, the image 'centos-6-v20180104' includes its family name 'centos-6'.
  // These images can be referred by family name here.
  string image = 4;

  // The fingerprint used for optimistic locking of this resource.  Used
  // internally during updates.
  string label_fingerprint = 5;

  // Labels to apply to this disk.  A list of key->value pairs.
  map<string, string> labels = 6;

  // Last attach timestamp in RFC3339 text format.
  string last_attach_timestamp = 7;

  // Last detach timestamp in RFC3339 text format.
  string last_detach_timestamp = 8;

  // Name of the resource. Provided by the client when the resource is
  // created. The name must be 1-63 characters long, and comply with
  // RFC1035. Specifically, the name must be 1-63 characters long and match
  // the regular expression '[a-z]([-a-z0-9]*[a-z0-9])?' which means the
  // first character must be a lowercase letter, and all following
  // characters must be a dash, lowercase letter, or digit, except the last
  // character, which cannot be a dash.
  string name = 9;

  // Physical block size of the persistent disk, in bytes. If not present
  // in a request, a default value is used. Currently supported sizes
  // are 4096 and 16384, other sizes may be added in the future.
  // If an unsupported value is requested, the error message will list
  // the supported values for the caller's project.
  int64  physical_block_size_bytes = 10;
  string project = 11;
  string self_link = 12;

  // Size of the persistent disk, specified in GB. You can specify this
  // field when creating a persistent disk using the 'image' or
  // 'snapshot' parameter, or specify it alone to create an empty
  // persistent disk.
  // 
  // If you specify this field along with 'image' or 'snapshot',
  // the value must not be less than the size of the image
  // or the size of the snapshot.
  int64  size = 13;

  // The source snapshot used to create this disk. You can provide this as
  // a partial or full URL to the resource. If the snapshot is in another
  // project than this disk, you must supply a full URL. For example, the
  // following are valid values:
  // 
  // * 'https://www.googleapis.com/compute/v1/projects/project/global/snapshots/snapshot'
  // * 'projects/project/global/snapshots/snapshot'
  // * 'global/snapshots/snapshot'
  // * 'snapshot'
  string snapshot = 14;

  // The ID value of the image used to create this disk. This value
  // identifies the exact image that was used to create this persistent
  // disk. For example, if you created the persistent disk from an image
  // that was later deleted and recreated under the same name, the source
  // image ID would identify the exact version of the image that was used.
  string source_image_id = 15;

  // The unique ID of the snapshot used to create this disk. This value
  // identifies the exact snapshot that was used to create this persistent
  // disk. For example, if you created the persistent disk from a snapshot
  // that was later deleted and recreated under the same name, the source
  // snapshot ID would identify the exact version of the snapshot that was
  // used.
  string source_snapshot_id = 16;

  // URL of the disk type resource describing which disk type to use to
  // create the disk. Provide this when creating the disk.
  string type = 17;

  // Links to the users of the disk (attached instances) in form:
  // project/zones/zone/instances/instance
  repeated string users = 18;

  // A reference to the zone where the disk resides.
  string zone = 19;
  message DiskEncryptionKey {

    // The self link of the encryption key used to encrypt the disk. Also called KmsKeyName
    // in the cloud console. Your project's Compute Engine System service account
    // ('service-{{PROJECT_NUMBER}}@compute-system.iam.gserviceaccount.com') must have
    // 'roles/cloudkms.cryptoKeyEncrypterDecrypter' to use this feature.
    // See https://cloud.google.com/compute/docs/disks/customer-managed-encryption#encrypt_a_new_persistent_disk_with_your_own_keys
    string kms_key_self_link = 1;

    // Specifies a 256-bit customer-supplied encryption key, encoded in
    // RFC 4648 base64 to either encrypt or decrypt this resource.
    string raw_key = 2;

    // The RFC 4648 base64 encoded SHA-256 hash of the customer-supplied
    // encryption key that protects this resource.
    string sha256 = 3;
  }
  repeated DiskEncryptionKey disk_encryption_key = 20;
  message SourceImageEncryptionKey {

    // The self link of the encryption key used to encrypt the disk. Also called KmsKeyName
    // in the cloud console. Your project's Compute Engine System service account
    // ('service-{{PROJECT_NUMBER}}@compute-system.iam.gserviceaccount.com') must have
    // 'roles/cloudkms.cryptoKeyEncrypterDecrypter' to use this feature.
    // See https://cloud.google.com/compute/docs/disks/customer-managed-encryption#encrypt_a_new_persistent_disk_with_your_own_keys
    string kms_key_self_link = 1;

    // Specifies a 256-bit customer-supplied encryption key, encoded in
    // RFC 4648 base64 to either encrypt or decrypt this resource.
    string raw_key = 2;

    // The RFC 4648 base64 encoded SHA-256 hash of the customer-supplied
    // encryption key that protects this resource.
    string sha256 = 3;
  }
  repeated SourceImageEncryptionKey source_image_encryption_key = 21;
  message SourceSnapshotEncryptionKey {

    // The self link of the encryption key used to encrypt the disk. Also called KmsKeyName
    // in the cloud console. Your project's Compute Engine System service account
    // ('service-{{PROJECT_NUMBER}}@compute-system.iam.gserviceaccount.com') must have
    // 'roles/cloudkms.cryptoKeyEncrypterDecrypter' to use this feature.
    // See https://cloud.google.com/compute/docs/disks/customer-managed-encryption#encrypt_a_new_persistent_disk_with_your_own_keys
    string kms_key_self_link = 1;

    // Specifies a 256-bit customer-supplied encryption key, encoded in
    // RFC 4648 base64 to either encrypt or decrypt this resource.
    string raw_key = 2;

    // The RFC 4648 base64 encoded SHA-256 hash of the customer-supplied
    // encryption key that protects this resource.
    string sha256 = 3;
  }
  repeated SourceSnapshotEncryptionKey source_snapshot_encryption_key = 22;
  message Timeouts {
    string create = 1;
    string delete = 2;
    string update = 3;
  }
  Timeouts timeouts = 23;
}