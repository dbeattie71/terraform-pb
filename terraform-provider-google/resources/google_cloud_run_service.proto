syntax="proto3";

package google;

message GoogleCloudRunService {
  bool   autogenerate_revision_name = 1;
  string id = 2;

  // The location of the cloud run instance. eg us-central1
  string location = 3;

  // Name must be unique within a namespace, within a Cloud Run region.
  // Is required when creating resources. Name is primarily intended
  // for creation idempotence and configuration definition. Cannot be updated.
  // More info: http://kubernetes.io/docs/user-guide/identifiers#names
  string name = 4;
  string project = 5;

  // The current status of the Service.
  message Status {
    message Conditions {
      string message = 1;
      string reason = 2;
      string status = 3;
      string type = 4;
    }
    repeated Conditions conditions = 1;
    string latest_created_revision_name = 2;
    string latest_ready_revision_name = 3;
    int64  observed_generation = 4;
    string url = 5;
  }
  repeated Status status = 6;
  message Metadata {

    // Annotations is a key value map stored with a resource that
    // may be set by external tools to store and retrieve arbitrary metadata. More
    // info: http://kubernetes.io/docs/user-guide/annotations
    map<string, string> annotations = 1;

    // A sequence number representing a specific generation of the desired state.
    int64  generation = 2;

    // Map of string keys and values that can be used to organize and categorize
    // (scope and select) objects. May match selectors of replication controllers
    // and routes.
    // More info: http://kubernetes.io/docs/user-guide/labels
    map<string, string> labels = 3;

    // In Cloud Run the namespace must be equal to either the
    // project ID or project number.
    string namespace = 4;

    // An opaque value that represents the internal version of this object that
    // can be used by clients to determine when objects have changed. May be used
    // for optimistic concurrency, change detection, and the watch operation on a
    // resource or set of resources. They may only be valid for a
    // particular resource or set of resources.
    // 
    // More info:
    // https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency
    string resource_version = 5;

    // SelfLink is a URL representing this object.
    string self_link = 6;

    // UID is a unique id generated by the server on successful creation of a resource and is not
    // allowed to change on PUT operations.
    // 
    // More info: http://kubernetes.io/docs/user-guide/identifiers#uids
    string uid = 7;
  }
  repeated Metadata metadata = 7;
  message Template {
    message Metadata {

      // Annotations is a key value map stored with a resource that
      // may be set by external tools to store and retrieve arbitrary metadata. More
      // info: http://kubernetes.io/docs/user-guide/annotations
      map<string, string> annotations = 1;

      // A sequence number representing a specific generation of the desired state.
      int64  generation = 2;

      // Map of string keys and values that can be used to organize and categorize
      // (scope and select) objects. May match selectors of replication controllers
      // and routes.
      // More info: http://kubernetes.io/docs/user-guide/labels
      map<string, string> labels = 3;

      // Name must be unique within a namespace, within a Cloud Run region.
      // Is required when creating resources. Name is primarily intended
      // for creation idempotence and configuration definition. Cannot be updated.
      // More info: http://kubernetes.io/docs/user-guide/identifiers#names
      string name = 4;

      // In Cloud Run the namespace must be equal to either the
      // project ID or project number. It will default to the resource's project.
      string namespace = 5;

      // An opaque value that represents the internal version of this object that
      // can be used by clients to determine when objects have changed. May be used
      // for optimistic concurrency, change detection, and the watch operation on a
      // resource or set of resources. They may only be valid for a
      // particular resource or set of resources.
      // 
      // More info:
      // https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency
      string resource_version = 6;

      // SelfLink is a URL representing this object.
      string self_link = 7;

      // UID is a unique id generated by the server on successful creation of a resource and is not
      // allowed to change on PUT operations.
      // 
      // More info: http://kubernetes.io/docs/user-guide/identifiers#uids
      string uid = 8;
    }
    repeated Metadata metadata = 1;
    message Spec {

      // ContainerConcurrency specifies the maximum allowed in-flight (concurrent)
      // requests per container of the Revision. Values are:
      // - '0' thread-safe, the system should manage the max concurrency. This is
      //     the default value.
      // - '1' not-thread-safe. Single concurrency
      // - '2-N' thread-safe, max concurrency of N
      int64  container_concurrency = 1;

      // Email address of the IAM service account associated with the revision of the
      // service. The service account represents the identity of the running revision,
      // and determines what permissions the revision has. If not provided, the revision
      // will use the project's default service account.
      string service_account_name = 2;

      // ServingState holds a value describing the state the resources
      // are in for this Revision.
      // It is expected
      // that the system will manipulate this based on routability and load.
      string serving_state = 3;
      message Containers {

        // Arguments to the entrypoint.
        // The docker image's CMD is used if this is not provided.
        // Variable references $(VAR_NAME) are expanded using the container's
        // environment. If a variable cannot be resolved, the reference in the input
        // string will be unchanged. The $(VAR_NAME) syntax can be escaped with a
        // double $$, ie: $$(VAR_NAME). Escaped references will never be expanded,
        // regardless of whether the variable exists or not.
        // More info:
        // https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
        repeated string args = 1;

        // Entrypoint array. Not executed within a shell.
        // The docker image's ENTRYPOINT is used if this is not provided.
        // Variable references $(VAR_NAME) are expanded using the container's
        // environment. If a variable cannot be resolved, the reference in the input
        // string will be unchanged. The $(VAR_NAME) syntax can be escaped with a
        // double $$, ie: $$(VAR_NAME). Escaped references will never be expanded,
        // regardless of whether the variable exists or not.
        // More info:
        // https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
        repeated string command = 2;

        // Docker image name. This is most often a reference to a container located
        // in the container registry, such as gcr.io/cloudrun/hello
        // More info: https://kubernetes.io/docs/concepts/containers/images
        string image = 3;

        // Container's working directory.
        // If not specified, the container runtime's default will be used, which
        // might be configured in the container image.
        string working_dir = 4;
        message Env {

          // Name of the environment variable.
          string name = 1;

          // Variable references $(VAR_NAME) are expanded
          // using the previous defined environment variables in the container and
          // any route environment variables. If a variable cannot be resolved,
          // the reference in the input string will be unchanged. The $(VAR_NAME)
          // syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped
          // references will never be expanded, regardless of whether the variable
          // exists or not.
          // Defaults to "".
          string value = 2;
        }
        repeated Env env = 5;
        message EnvFrom {

          // An optional identifier to prepend to each key in the ConfigMap.
          string prefix = 1;
          message ConfigMapRef {

            // Specify whether the ConfigMap must be defined
            bool   optional = 1;
            message LocalObjectReference {

              // Name of the referent.
              // More info:
              // https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
              string name = 1;
            }
            repeated LocalObjectReference local_object_reference = 2;
          }
          repeated ConfigMapRef config_map_ref = 2;
          message SecretRef {

            // Specify whether the Secret must be defined
            bool   optional = 1;
            message LocalObjectReference {

              // Name of the referent.
              // More info:
              // https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
              string name = 1;
            }
            repeated LocalObjectReference local_object_reference = 2;
          }
          repeated SecretRef secret_ref = 3;
        }
        repeated EnvFrom env_from = 6;
        message Resources {

          // Limits describes the maximum amount of compute resources allowed.
          // The values of the map is string form of the 'quantity' k8s type:
          // https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apimachinery/pkg/api/resource/quantity.go
          map<string, string> limits = 1;

          // Requests describes the minimum amount of compute resources required.
          // If Requests is omitted for a container, it defaults to Limits if that is
          // explicitly specified, otherwise to an implementation-defined value.
          // The values of the map is string form of the 'quantity' k8s type:
          // https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apimachinery/pkg/api/resource/quantity.go
          map<string, string> requests = 2;
        }
        repeated Resources resources = 7;
      }
      repeated Containers containers = 4;
    }
    repeated Spec spec = 2;
  }
  repeated Template template = 8;
  message Timeouts {
    string create = 1;
    string delete = 2;
    string update = 3;
  }
  Timeouts timeouts = 9;
  message Traffic {

    // LatestRevision may be optionally provided to indicate that the latest ready
    // Revision of the Configuration should be used for this traffic target. When
    // provided LatestRevision must be true if RevisionName is empty; it must be
    // false when RevisionName is non-empty.
    bool   latest_revision = 1;

    // Percent specifies percent of the traffic to this Revision or Configuration.
    int64  percent = 2;

    // RevisionName of a specific revision to which to send this portion of traffic.
    string revision_name = 3;
  }
  repeated Traffic traffic = 10;
}