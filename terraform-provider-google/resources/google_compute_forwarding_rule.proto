syntax="proto3";

package google;

message GoogleComputeForwardingRule {

  // For internal TCP/UDP load balancing (i.e. load balancing scheme is
  // INTERNAL and protocol is TCP/UDP), set this to true to allow packets
  // addressed to any ports to be forwarded to the backends configured
  // with this forwarding rule. Used with backend service. Cannot be set
  // if port or portRange are set.
  bool   all_ports = 1;

  // If true, clients can access ILB from all regions.
  // Otherwise only allows from the local region the ILB is located at.
  bool   allow_global_access = 2;

  // A BackendService to receive the matched traffic. This is used only
  // for INTERNAL load balancing.
  string backend_service = 3;

  // Creation timestamp in RFC3339 text format.
  string creation_timestamp = 4;

  // An optional description of this resource. Provide this property when
  // you create the resource.
  string description = 5;
  string id = 6;

  // The IP address that this forwarding rule is serving on behalf of.
  // 
  // Addresses are restricted based on the forwarding rule's load balancing
  // scheme (EXTERNAL or INTERNAL) and scope (global or regional).
  // 
  // When the load balancing scheme is EXTERNAL, for global forwarding
  // rules, the address must be a global IP, and for regional forwarding
  // rules, the address must live in the same region as the forwarding
  // rule. If this field is empty, an ephemeral IPv4 address from the same
  // scope (global or regional) will be assigned. A regional forwarding
  // rule supports IPv4 only. A global forwarding rule supports either IPv4
  // or IPv6.
  // 
  // When the load balancing scheme is INTERNAL, this can only be an RFC
  // 1918 IP address belonging to the network/subnet configured for the
  // forwarding rule. By default, if this field is empty, an ephemeral
  // internal IP address will be automatically allocated from the IP range
  // of the subnet or network configured for this forwarding rule.
  // 
  // An address must be specified by a literal IP address. ~> **NOTE**: While
  // the API allows you to specify various resource paths for an address resource
  // instead, Terraform requires this to specifically be an IP address to
  // avoid needing to fetching the IP address from resource paths on refresh
  // or unnecessary diffs.
  string ip_address = 7;

  // The IP protocol to which this rule applies. Valid options are TCP,
  // UDP, ESP, AH, SCTP or ICMP.
  // 
  // When the load balancing scheme is INTERNAL, only TCP and UDP are
  // valid.
  string ip_protocol = 8;
  string ip_version = 9;

  // This signifies what the ForwardingRule will be used for and can be
  // EXTERNAL, INTERNAL, or INTERNAL_MANAGED. EXTERNAL is used for Classic
  // Cloud VPN gateways, protocol forwarding to VMs from an external IP address,
  // and HTTP(S), SSL Proxy, TCP Proxy, and Network TCP/UDP load balancers.
  // INTERNAL is used for protocol forwarding to VMs from an internal IP address,
  // and internal TCP/UDP load balancers.
  // INTERNAL_MANAGED is used for internal HTTP(S) load balancers.
  string load_balancing_scheme = 10;

  // Name of the resource; provided by the client when the resource is
  // created. The name must be 1-63 characters long, and comply with
  // RFC1035. Specifically, the name must be 1-63 characters long and match
  // the regular expression '[a-z]([-a-z0-9]*[a-z0-9])?' which means the
  // first character must be a lowercase letter, and all following
  // characters must be a dash, lowercase letter, or digit, except the last
  // character, which cannot be a dash.
  string name = 11;

  // For internal load balancing, this field identifies the network that
  // the load balanced IP should belong to for this Forwarding Rule. If
  // this field is not specified, the default network will be used.
  // This field is only used for INTERNAL load balancing.
  string network = 12;

  // The networking tier used for configuring this address. This field can
  // take the following values: PREMIUM or STANDARD. If this field is not
  // specified, it is assumed to be PREMIUM.
  string network_tier = 13;

  // This field is used along with the target field for TargetHttpProxy,
  // TargetHttpsProxy, TargetSslProxy, TargetTcpProxy, TargetVpnGateway,
  // TargetPool, TargetInstance.
  // 
  // Applicable only when IPProtocol is TCP, UDP, or SCTP, only packets
  // addressed to ports in the specified range will be forwarded to target.
  // Forwarding rules with the same [IPAddress, IPProtocol] pair must have
  // disjoint port ranges.
  // 
  // Some types of forwarding target have constraints on the acceptable
  // ports:
  // 
  // * TargetHttpProxy: 80, 8080
  // * TargetHttpsProxy: 443
  // * TargetTcpProxy: 25, 43, 110, 143, 195, 443, 465, 587, 700, 993, 995,
  //                   1883, 5222
  // * TargetSslProxy: 25, 43, 110, 143, 195, 443, 465, 587, 700, 993, 995,
  //                   1883, 5222
  // * TargetVpnGateway: 500, 4500
  string port_range = 14;

  // This field is used along with the backend_service field for internal
  // load balancing.
  // 
  // When the load balancing scheme is INTERNAL, a single port or a comma
  // separated list of ports can be configured. Only packets addressed to
  // these ports will be forwarded to the backends configured with this
  // forwarding rule.
  // 
  // You may specify a maximum of up to 5 ports.
  repeated string ports = 15;
  string project = 16;

  // A reference to the region where the regional forwarding rule resides.
  // This field is not applicable to global forwarding rules.
  string region = 17;
  string self_link = 18;

  // An optional prefix to the service name for this Forwarding Rule.
  // If specified, will be the first label of the fully qualified service
  // name.
  // 
  // The label must be 1-63 characters long, and comply with RFC1035.
  // Specifically, the label must be 1-63 characters long and match the
  // regular expression '[a-z]([-a-z0-9]*[a-z0-9])?' which means the first
  // character must be a lowercase letter, and all following characters
  // must be a dash, lowercase letter, or digit, except the last
  // character, which cannot be a dash.
  // 
  // This field is only used for INTERNAL load balancing.
  string service_label = 19;

  // The internal fully qualified service name for this Forwarding Rule.
  // This field is only used for INTERNAL load balancing.
  string service_name = 20;

  // The subnetwork that the load balanced IP should belong to for this
  // Forwarding Rule.  This field is only used for INTERNAL load balancing.
  // 
  // If the network specified is in auto subnet mode, this field is
  // optional. However, if the network is in custom subnet mode, a
  // subnetwork must be specified.
  string subnetwork = 21;

  // The URL of the target resource to receive the matched traffic.
  // The target must live in the same region as the forwarding rule.
  // The forwarded traffic must be of a type appropriate to the target
  // object.
  string target = 22;
  message Timeouts {
    string create = 1;
    string delete = 2;
    string update = 3;
  }
  Timeouts timeouts = 23;
}