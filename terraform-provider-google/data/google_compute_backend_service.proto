syntax="proto3";

package google;

message GoogleComputeBackendService {

  // Lifetime of cookies in seconds if session_affinity is
  // GENERATED_COOKIE. If set to 0, the cookie is non-persistent and lasts
  // only until the end of the browser session (or equivalent). The
  // maximum allowed value for TTL is one day.
  // 
  // When the load balancing scheme is INTERNAL, this field is not used.
  int64  affinity_cookie_ttl_sec = 1;

  // The set of backends that serve this BackendService.
  message Backend {
    string balancing_mode = 1;
    int64  capacity_scaler = 2;
    string description = 3;
    string group = 4;
    int64  max_connections = 5;
    int64  max_connections_per_endpoint = 6;
    int64  max_connections_per_instance = 7;
    int64  max_rate = 8;
    int64  max_rate_per_endpoint = 9;
    int64  max_rate_per_instance = 10;
    int64  max_utilization = 11;
  }
  repeated Backend backend = 2;

  // Cloud CDN configuration for this BackendService.
  message CdnPolicy {
    message CacheKeyPolicy {
      bool   include_host = 1;
      bool   include_protocol = 2;
      bool   include_query_string = 3;
      repeated string query_string_blacklist = 4;
      repeated string query_string_whitelist = 5;
    }
    repeated CacheKeyPolicy cache_key_policy = 1;
    int64  signed_url_cache_max_age_sec = 2;
  }
  repeated CdnPolicy cdn_policy = 3;

  // Time for which instance will be drained (not accept new
  // connections, but still work to finish started).
  int64  connection_draining_timeout_sec = 4;

  // Creation timestamp in RFC3339 text format.
  string creation_timestamp = 5;

  // An optional description of this resource.
  string description = 6;

  // If true, enable Cloud CDN for this BackendService.
  bool   enable_cdn = 7;

  // Fingerprint of this resource. A hash of the contents stored in this
  // object. This field is used in optimistic locking.
  string fingerprint = 8;

  // The set of URLs to the HttpHealthCheck or HttpsHealthCheck resource
  // for health checking this BackendService. Currently at most one health
  // check can be specified, and a health check is required.
  // 
  // For internal load balancing, a URL to a HealthCheck resource must be specified instead.
  repeated string health_checks = 9;

  // Settings for enabling Cloud Identity Aware Proxy
  message Iap {
    string oauth2_client_id = 1;
    string oauth2_client_secret = 2;
    string oauth2_client_secret_sha256 = 3;
  }
  repeated Iap iap = 10;
  string id = 11;

  // Indicates whether the backend service will be used with internal or
  // external load balancing. A backend service created for one type of
  // load balancing cannot be used with the other. Must be 'EXTERNAL' or
  // 'INTERNAL_SELF_MANAGED' for a global backend service. Defaults to 'EXTERNAL'.
  string load_balancing_scheme = 12;

  // Name of the resource. Provided by the client when the resource is
  // created. The name must be 1-63 characters long, and comply with
  // RFC1035. Specifically, the name must be 1-63 characters long and match
  // the regular expression '[a-z]([-a-z0-9]*[a-z0-9])?' which means the
  // first character must be a lowercase letter, and all following
  // characters must be a dash, lowercase letter, or digit, except the last
  // character, which cannot be a dash.
  string name = 13;

  // Name of backend port. The same name should appear in the instance
  // groups referenced by this service. Required when the load balancing
  // scheme is EXTERNAL.
  string port_name = 14;
  string project = 15;

  // The protocol this BackendService uses to communicate with backends.
  // Possible values are HTTP, HTTPS, HTTP2, TCP, and SSL. The default is
  // HTTP. **NOTE**: HTTP2 is only valid for beta HTTP/2 load balancer
  // types and may result in errors if used with the GA API.
  string protocol = 16;

  // The security policy associated with this backend service.
  string security_policy = 17;
  string self_link = 18;

  // Type of session affinity to use. The default is NONE. Session affinity is
  // not applicable if the protocol is UDP.
  string session_affinity = 19;

  // How many seconds to wait for the backend before considering it a
  // failed request. Default is 30 seconds. Valid range is [1, 86400].
  int64  timeout_sec = 20;
}